[23:59:49] root: INFO: Starting Ragout v2.0b
[23:59:49] root: INFO: Extracting target FASTA from HAL
[23:59:49] root: INFO: Extracting ancestor FASTA from HAL
[23:59:50] root: INFO: Converting HAL to MAF
[23:59:50] root: DEBUG: hal2mafMP.py boolean1000.hal new_test/hal-workdir/alignment.maf --numProc 1 --refGenome G4 --targetGenomes G5,G4,G3,G2 --inMemory
[00:02:35] root: INFO: Extracting synteny blocks from MAF
[00:02:35] root: INFO: Running maf2synteny module
[00:02:35] root: DEBUG: Parsing MAF file
[00:02:36] root: DEBUG: Started initial compression
[00:02:36] root: DEBUG: Simplification with 30 500
[00:02:36] root: DEBUG: Simplification with 100 5000
[00:02:36] root: DEBUG: Simplification with 500 50000
[00:02:36] root: DEBUG: Simplification with 5000 500000
[00:02:36] root: INFO: Phylogeny is taken from the recipe
[00:02:36] root: DEBUG: Branch lengths: [1, 1, 1, 1], mu = 1.0
[00:02:36] root: INFO: Processing permutation files
[00:02:36] root: DEBUG: Reading permutation file
[00:02:36] root: DEBUG: "G5" synteny blocks coverage: 81.36%
[00:02:36] root: DEBUG: "G4" synteny blocks coverage: 85.02%
[00:02:36] root: DEBUG: "G3" synteny blocks coverage: 81.36%
[00:02:36] root: DEBUG: Read 2 reference sequences
[00:02:36] root: DEBUG: Read 16 target sequences
[00:02:36] root: DEBUG: Read 4 ancestor sequences
[00:02:36] root: DEBUG: 16 target sequences left after indel filtering
[00:02:36] root: DEBUG: 16 target sequences left after repeat filtering
[00:02:36] root: DEBUG: Built breakpoint graph with 48 nodes
[00:02:36] root: DEBUG: Reading permutation file
[00:02:36] root: DEBUG: "G5" synteny blocks coverage: 81.36%
[00:02:36] root: DEBUG: "G4" synteny blocks coverage: 85.02%
[00:02:36] root: DEBUG: "G3" synteny blocks coverage: 81.36%
[00:02:36] root: DEBUG: Read 2 reference sequences
[00:02:36] root: DEBUG: Read 16 target sequences
[00:02:36] root: DEBUG: Read 4 ancestor sequences
[00:02:36] root: DEBUG: 16 target sequences left after indel filtering
[00:02:36] root: DEBUG: 16 target sequences left after repeat filtering
[00:02:36] root: DEBUG: Built breakpoint graph with 48 nodes
[00:02:36] root: INFO: Reading contigs file
[00:02:36] root: INFO: Reading contigs file
[00:02:36] root: DEBUG: Detecting chimeric adjacencies
[00:02:36] root: INFO: Stage "70000"
[00:02:36] root: DEBUG: Chimera Detector: 0 cuts made in 0 sequences
[00:02:36] root: DEBUG: Built breakpoint graph with 48 nodes
[00:02:36] root: INFO: Inferring missing adjacencies
[00:02:36] root: DEBUG: Found 17 connected components
[00:02:36] root: DEBUG: Inferred 16 adjacencies
[00:02:36] root: DEBUG: 0 orphaned nodes
[00:02:36] root: DEBUG: 0 guessed edges
[00:02:36] root: DEBUG: 8 trimmed edges
[00:02:36] root: INFO: Building scaffolds
[00:02:36] root: DEBUG: 16 contigs were joined into 1 scaffolds
[00:02:36] root: INFO: Stage "refine"
[00:02:36] root: DEBUG: Chimera Detector: 0 cuts made in 0 sequences
[00:02:36] root: DEBUG: Built breakpoint graph with 48 nodes
[00:02:36] root: INFO: Inferring missing adjacencies
[00:02:36] root: DEBUG: Found 17 connected components
[00:02:36] root: DEBUG: Inferred 16 adjacencies
[00:02:36] root: DEBUG: 0 orphaned nodes
[00:02:36] root: DEBUG: 0 guessed edges
[00:02:36] root: DEBUG: 8 trimmed edges
[00:02:36] root: INFO: Building scaffolds
[00:02:36] root: DEBUG: 16 contigs were joined into 1 scaffolds
[00:02:36] root: DEBUG: Chimera Detector: 0 cuts made in 0 sequences
[00:02:36] root: INFO: Merging two iterations
[00:02:36] root: DEBUG: Fail: not found: 0
[00:02:36] root: DEBUG: Fail: different scaffolds: 0
[00:02:36] root: DEBUG: Fail: different orientatilns: 0
[00:02:36] root: DEBUG: Fail: inconsistent: 0
[00:02:36] root: DEBUG: Total success: 15
[00:02:36] root: DEBUG: Total fail: 0
[00:02:36] root: DEBUG: Total inserted: 0
[00:02:36] root: DEBUG: Result: 16 contigs in 1 scaffolds
[00:02:36] root: DEBUG: Merging consequtive contigs: 16 left
[00:02:36] root: DEBUG: Built breakpoint graph with 48 nodes
[00:02:36] root: INFO: Inferring missing adjacencies
[00:02:36] root: DEBUG: Found 13 connected components
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Branch lengths: [1, 1], mu = 1.0
[00:02:36] root: DEBUG: Inferred 4 adjacencies
[00:02:36] root: DEBUG: 0 orphaned nodes
[00:02:36] root: DEBUG: 0 guessed edges
[00:02:36] root: DEBUG: 20 trimmed edges
[00:02:36] root: INFO: Building scaffolds
[00:02:36] root: DEBUG: 4 contigs were joined into 1 scaffolds
[00:02:36] root: INFO: Generating FASTA output
[00:02:36] root: INFO: Assembly statistics:

	Scaffolds:		1
	Used fragments:		4
	Scaffolds length:	4629845

	Unplaced fragments:	0
	Unplaced length:	0 (0.00%)
	Introduced Ns length:	33 (0.00%)

	Fragments N50:		1102341
	Assembly N50:		4629845

[00:02:36] root: INFO: Building assembly graph
[00:02:36] root: DEBUG: Reading FASTA
[00:02:36] root: DEBUG: Building FM-index
[00:02:37] root: DEBUG: Overapping
[00:02:37] root: DEBUG: Kmer size is set to -1
[00:02:37] root: INFO: Refining with assembly graph
[00:02:37] root: DEBUG: Max path len = 30
[00:02:37] root: WARNING: Too few overlaps (0) between contigs were detected -- refine procedure will be useless. Possible reasons:

1. Some contigs output by assembler are missing
2. Contigs overlap not on a constant value (like k-mer for assemblers which use debruijn graph)
3. Contigs ends are trimmed/postprocessed

[00:02:37] root: INFO: Generating FASTA output
[00:02:37] root: INFO: Assembly statistics:

	Scaffolds:		1
	Used fragments:		16
	Scaffolds length:	4709466

	Unplaced fragments:	1
	Unplaced length:	200000 (4.32%)
	Introduced Ns length:	279654 (5.94%)

	Fragments N50:		300000
	Assembly N50:		4709466

[00:02:37] root: INFO: Done!
